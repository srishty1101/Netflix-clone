{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Netflix-cloner\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 1\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","table","map","movie","poster_path","backdrop_path","name","id"],"sources":["D:/projects/Netflix-cloner/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    console.table(movies);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row__posters\">\r\n                {/* several row__poster(s) */}\r\n\r\n                {movies.map(movie => (\r\n\r\n\r\n<img key={movie.id} \r\nclassName={`row__poster ${isLargeRow && \"row__posterLarge\"}`} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AAEA,SAASC,GAAT,OAA8C;EAAA;;EAAA,IAAjC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAiC;EAC1C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;EACAC,SAAS,CAAC,MAAM;IACZ,eAAeS,SAAf,GAA2B;MACvB,MAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUN,QAAV,CAAtB;MACAG,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;MACA,OAAOH,OAAP;IACH;;IACDD,SAAS;EACZ,CAPQ,EAON,CAACJ,QAAD,CAPM,CAAT;EASAS,OAAO,CAACC,KAAR,CAAcR,MAAd;EAEA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA,UAAKH;IAAL;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI;MAAK,SAAS,EAAC,cAAf;MAAA,UAGKG,MAAM,CAACS,GAAP,CAAWC,KAAK,iBAGjC;QACA,SAAS,EAAG,eAAcX,UAAU,IAAI,kBAAmB,EAD3D;QAC8D,GAAG,EAAG,GAAEJ,QAAS,GAAEI,UAAU,GAAGW,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EADtI;QACyI,GAAG,EAAEF,KAAK,CAACG;MADpJ,GAAUH,KAAK,CAACI,EAAhB;QAAA;QAAA;QAAA;MAAA,QAHiB;IAHL;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GA7BQlB,G;;KAAAA,G;AA+BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}